#!/bin/bash
#BSUB -J jverf_precip_plot
#BSUB -o /gpfs/dell2/ptmp/Ying.Lin/cron.out/verfplot.%J
#BSUB -e /gpfs/dell2/ptmp/Ying.Lin/cron.out/verfplot.%J
#BSUB -n 1
#BSUB -q "dev"
#BSUB -W 1:45
#BSUB -P VERF-T2O
#BSUB -R span[ptile=1]

set -x
module purge
module load ips/18.0.5.274    # for prod_util
module load prod_util/1.1.3
module load prod_envir/1.0.3
module load grib_util/1.1.1

module use -a /gpfs/dell1/nco/ops/nwprod/modulefiles/
module load gempak/7.3.1

export envir=dev
export cyc=00
export RUN_ENVIR=dev
export retro=N
export debug=N
export domain=conus
export job=verf_precip_plot_$domain
export SENDRZDM=YES

export version=v4.3.2

# This script has three optional arguments if run interactively.  WCOSS LSF 
# (bsub) does not accept arguments in the LSF script, in that case, set up
# up as environmental variables.  To make this thing more flexible, arg 2 
# and/or 3 can be either 'debug' or 'retro'.  
#   var 1:   vday=yyyymmdd (if var 1 not set, $daym1 is used in J-job)
#   var 2/3: retro (default: no retro)
#   var 3/2: debug (default: no debug.  In debug mode, do not delete the 
#            working directory)

# If this script is run with no arguments, it is assumed that it is
# bsub'd by the cron job (cronmode=Y).  In that case, when the getppt step is
# done, in the dev mode (and if bsubnext=Y), ???? TBD jobs/JVERF_PRECIP_VERFGEN_24H will bsub 
# ecf/jverf_precip_plot.ecf.   When this job is run with at least one argument,
# we'll only be running the VERFGEN24 itself.  
export cronmode=Y

if [ $# -ge 1 ]; then
  export vday=$1
  export cronmode=N
fi

if [ $# -ge 2 ]; then
  if [ $2 = retro ]; then
    retro=Y
  elif [ $2 = debug ]; then
    debug=Y
  fi
fi

if [ $# -ge 3 ]; then
  if [ $3 = retro ]; then
    retro=Y
  elif [ $3 = debug ]; then
    debug=Y
  fi
fi

if [ "$RUN_ENVIR" = dev ]; then        ### for dev 
# ------------------------------------------------------
# Most frequently made changes: 
  export NOSCRUB=/gpfs/dell2/emc/verification/noscrub/Ying.Lin
  export HOMEverf_precip=$NOSCRUB/verf_precip
  export PARMverf_precip=$HOMEverf_precip/parm.dev
  export DATAverf_precip=/gpfs/dell2/ptmp/$LOGNAME/verf.dat
#
  export bsubnext=Y   # bsub the transfer to RZDM,if other conditions are met? 
  # Location of the 45-day rotating archive:
  export ARCH45DAY=$NOSCRUB/hold45days
  # Location of the EZDM directory:
  export RZDMDIR=/home/www/emc/htdocs/mmb/ylin/pcpverif/daily.dell
  # Use prod data for plot? # NO if testing package submitted for implementation
  export USEPRD4PLT=NO
# export USEPRD4PLT=YES
# ------------------------------------------------------
  # DATAROOT is NCO-speak for 'wrkdir'.
  export DATAROOT=/gpfs/dell2/stmp/$LOGNAME/tmpnwprd
  # export vday=20160228
else                                   ### for prod/para/test
  export HOMEverf_precip=/gpfs/dell1/nco/ops/nw${envir}/verf_precip.${version}
fi # end of 'is this dev?' 

$HOMEverf_precip/jobs/JVERF_PRECIP_PLOTPCP

# Send out the data to the webserver if running in the development mode (currently RZDM)
if [ $RUN_ENVIR = dev -a $SENDRZDM = YES ]
then
  
  if [ $cronmode = Y ]; then
    . ~/.bashrc > ~/cron.bashrc.out 2>&1; bsub < $HOMEverf_precip/util.dev/trans_send2rzdm.ksh > $CRONOUT/cron.send2rzdm_${domain} 2>&1
  else
    . ~/.bashrc > ~/cron.bashrc.out 2>&1; $HOMEverf_precip/util.dev/trans_send2rzdm.ksh > $CRONOUT/cron.send2rzdm_${domain} 2>&1
  fi
fi

